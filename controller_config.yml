# vim: ft=yaml.ansible
---
# 2.5 compatibility section
aap_username: '{{ controller_username_vault }}'
aap_password: '{{ controller_password_vault }}'
aap_organizations: '{{ controller_organizations }}'
aap_validate_certs: '{{ controller_validate_certs }}'
aap_configuration_async_retries: '{{ controller_configuration_async_retries }}'
# End 2.5 compatibiity section

orgname_vault: 'Demo Organization'

controller_username_vault: 'admin'
controller_password_vault: '{{ admin_password }}'

controller_username: '{{ controller_username_vault }}'
controller_password: '{{ controller_password_vault }}'

controller_configuration_async_retries: 30

agof_demo_project_name: 'Ansible GitOps Framework Minimal Demo'

controller_validate_certs: false

controller_settings: []

controller_projects:
  - name: Demo Project
    state: absent

  - name: '{{ agof_demo_project_name }}'
    organization: "{{ orgname_vault }}"
    scm_branch: main
    scm_clean: "no"
    scm_delete_on_update: "no"
    scm_type: git
    scm_update_on_launch: "yes"
    scm_url: 'https://github.com/mbaldessari/agof_minimal_demo.git'

controller_organizations:
  - name: '{{ orgname_vault }}'

controller_inventories:
  - name: 'AGOF Demo Inventory'
    organization: '{{ orgname_vault }}'

controller_inventory_sources:
  - name: 'AGOF Demo Inventory Source'
    inventory: 'AGOF Demo Inventory'
    credential: 'ec2_ssh_credential'
    overwrite: true
    overwrite_vars: true
    update_on_launch: true
    source: scm
    source_project: '{{ agof_demo_project_name }}'
    source_path: 'inventory'

controller_credential_types: []

controller_templates:
  - name: Demo Job Template
    state: absent

  - name: Ping Playbook
    organization: "{{ orgname_vault }}"
    project: '{{ agof_demo_project_name }}'
    job_type: run
    playbook: 'ansible/playbooks/ping.yml'
    inventory: "AGOF Demo Inventory"
    credentials:
      - ec2_ssh_credential

controller_schedules:
  - name: Ping Playbook
    organization: "{{ orgname_vault }}"
    unified_job_template: Ping Playbook
    rrule: DTSTART:20191219T130500Z RRULE:FREQ=MINUTELY;INTERVAL=120

demo_ssh_key_file: '~/{{ ec2_name_prefix }}/{{ ec2_name_prefix }}-private.pem'

controller_credentials:
  - name: ec2_ssh_credential
    description: "EC2 SSH credential"
    organization: '{{ orgname_vault }}'
    credential_type: Machine
    inputs:
      username: 'ec2-user'
      ssh_key_data: "{{ lookup('file', demo_ssh_key_file) }}"
      become_method: sudo

controller_launch_jobs:
  - name: Ping Playbook
    organization: "{{ orgname_vault }}"
